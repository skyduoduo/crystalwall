#summary One-sentence summary of this page.

= Introduction =

权限系统组成
对于任何一个权限系统来说，基本上都分为两个部分。
	认证：对用户所声称的身份进行合法性验证。
	授权：对用户声称的身份能够访问的资源进行控制
由于当前开源认证系统非常丰富，例如统一身份认证OAuther，在CrystalWall V1.0版本中不包含认证部分。1.0版本仅仅针对授权进行开发。
权限
权限是一个非常广泛的概念，什么是权限？权限有非常繁多的种类，例如：admin用户能访问数据库，论坛匿名用户不能发帖等等。总体上来说，权限就是对系统中某一种资源进行的访问。
对于这种访问，CrystalWall权限系统使用抽象类PermissionInfo类表示。每一种权限都具有一个名称和一个动作字符表示。名称和动作的具体含义有PermissionInfo的具体实现类决定。例如，你可以设计一个PagePermissionInfo类表示对html网页的权限，他的name名称为网页的虚拟路径，action动作为browser浏览等。
对于一个身份来说，一般不会仅仅具有一个或一种权限。例如网站管理员具有上传图片的权限，也具有删帖的权限等。那么如果表示一个身份所具有的所有权限呢？在CrystalWall系统中，使用了一个叫PermissionInfoCollection的类来表示一个身份具有的“权限集”。一个权限集一般包含同种类型的许多权限。当然，你也可以实现自己的子类以包含多种不同类型的权限。
有了权限和权限集的概念，那么如何才能判断一个身份能够访问某种资源呢？这个问题相当简单，一个身份具有一个PermissionInfoCollection，而对某种资源的访问，CrystalWall使用PermissionInfo表示，那么要判断身份是否能够访问某种资源，只需要判断身份具有的权限集PermissionInfoCollection是否包含要访问的资源所代表的PermissionInfo即可。
因此，CrystalWall权限系统在PermissionInfoCollection类中设计了一个Contains方法用于判断权限集是否包含某个权限。如果包含，表示此身份允许对PermissionInfo所代表的资源进行“某种”访问，如果不包含，则表示身份没有得到“授权”不允许访问资源。
PermissionInfo类
这个类是CrystalWall权限系统的核心类。通过以上分析，PermissionInfo封装了对某种资源的某种访问。实际上，这种“访问”也具有相关的关系！
例如：对磁盘上某个文件进行的“编辑”操作，就隐含表示了对这个文件可以进行“读取查看”操作，而对这个文件的”删除“操作，就不一定包含”读取“操作。为了表示这种在权限之间的”包含关系“，PermissionInfo类中也具有一个方法：Contains。但这个方法是抽象的，需要开发者根据具体的权限类自己进行扩充。
 注意：在CrystalWall权限系统中并没有运用Composite模式使得PermissionInfoCollection继承自PermissionInfo，因为我们认为在行为上，权限集与权限已经表现的不尽相同了。记住：一个权限集并不是一个权限，PermissionInfoCollection与PermissionInfo并不是面向对象中所说的“is a"关系。



= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages