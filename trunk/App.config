<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="privileges">
      <section name="res-def" type="QJSoft.ECBC.Authority.Config.ResourceSectionHandler"/>
      <sectionGroup name="roles">
        <section name="role" type="QJSoft.ECBC.Authority.Config.RoleSection"/>
      </sectionGroup>
    </sectionGroup>
  </configSections>
  <!--
       -在Authority权限系统中，使用此配置文件进行权限配置。权限配置是基于角色的，例如你可以配置系统中的角色
       -"admin"具有对文件类型的资源进行edit操作。配置如下：
       -<access>
       -     <action-provider id="customer" type="Com.QJSoft.CustomerNamedProvider">
       -               //自定义配置动态的动作提供者
       -     </action-provider>
       -     <resource id="txtfile" name="文件" target="Com.QJSoft.File">
       -        <requirement type="Com.QJSoft.FileRequirement">
       -          用于资源实例类的匹配方式，例如对一个文件管理类的资源，可以指定目录的匹配
       -          <directory>f:\resources\*.txt</directory>
       -        </requirement>
       -           action用于配置任意资源类中需要进行访问控制的方法、事件、委托-
       -            定义更细粒度的方法、事件、属性级的权限控制
       -           <field id="GetFile" name="GetFile"  type="method" >
       -                <param type="System.Int32"/>
       -                <param type="System.String"/>
       -           </field>
       -           <field  id="OnClick"  name="OnClick" type="event"/>
       -           <field  id="Age" name="Age" type="prop"/>
       -        </field>
       -     </resource>
       -     <roles>
       -         <role id="superadmin" name="超级管理员">
       -            <allow resource="txtfile" action="view, edit"/>允许对资源txtfile执行view，edit动作
       -            <allow resource="txtfile" field="OnClick" dynamic-action="customer"/>
       -         </role>
       -         <role id="admin" name="管理员">
       -            <extention id="superadmin"/>
       -            <extention id="myadmin"/>
       -            <allow resource="file" action="delfile"/>
       -            <allow resource="db" action="viewage"/>
       -          </role>
       -     </roles>
       -</access>
       -定义了上述文件之后，开发人员则可以在需要进行权限控制的地方调用Access.Require(role, resource, privilege)方法。
       -如编写如下代码：Access.Require("admin", "file", "del");
   -->
</configuration>